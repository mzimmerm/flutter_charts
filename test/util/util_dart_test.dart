import 'package:test/test.dart'; // Dart test package

import 'package:flutter_charts/src/util/util_dart.dart';

void main() {
  test('AffineRangedMap1D.apply - from generated data', () {
    var data = [
      //[1.0, 1.0, 2.0, 10.0, 20.0, 12.0],
      //[2.0, 1.0, 2.0, 10.0, 20.0, 2.0],
 
      // ex10 linear chart and bar chart
      [-1000.0, -1000.0, 4000.0, 8.0, 413.42857142857144,  413.42857142857144],
      [-1000.0, -1000.0, 4000.0, 0.0, 441.42857142857144,  441.42857142857144],
      [-200.0, -1000.0, 2200.0,  8.0, 413.42857142857144,  312.07142857142856],
      [-200.0, -1000.0, 4000.0,  8.0, 413.42857142857144,  348.56],
      [-400.0, -1000.0, 2200.0,  8.0, 413.42857142857144,  337.41071428571433],
      [-400.0, -1000.0, 4000.0,  8.0, 413.42857142857144,  364.77714285714285],
      [-600.0, -1000.0, 2200.0,  8.0, 413.42857142857144,  362.75],
      [-600.0, -1000.0, 4000.0,  8.0, 413.42857142857144,  380.99428571428575],
      [-800.0, -1000.0, 2200.0,  8.0, 413.42857142857144,  388.0892857142857],
      [-800.0, -1000.0, 4000.0,  8.0, 413.42857142857144,  397.2114285714286],
      [0.0, -1000.0, 2200.0,     8.0, 413.42857142857144,  286.7321428571429],
      [0.0, -1000.0, 2200.0,     0.0, 441.42857142857144,  303.4821428571429],
      [0.0, -1000.0, 4000.0,     8.0, 413.42857142857144,  332.34285714285716],
      [0.0, -1000.0, 4000.0,     0.0, 441.42857142857144,  353.14285714285717],
      [1000.0, -1000.0, 2200.0,  0.0, 441.42857142857144,  165.53571428571428],
      [1000.0, -1000.0, 4000.0,  8.0, 413.42857142857144,  251.25714285714287],
      [1000.0, -1000.0, 4000.0,  0.0, 441.42857142857144,  264.8571428571429],
      [1200.0, -1000.0, 4000.0,  8.0, 413.42857142857144,  235.04000000000002],
      [1400.0, -1000.0, 2200.0,  8.0, 413.42857142857144,  109.35714285714289],
      [1400.0, -1000.0, 4000.0,  8.0, 413.42857142857144,  218.82285714285715],
      [1600.0, -1000.0, 2200.0,  8.0, 413.42857142857144,  84.01785714285717],
      [1600.0, -1000.0, 4000.0,  8.0, 413.42857142857144,  202.6057142857143],
      [1800.0, -1000.0, 2200.0,  8.0, 413.42857142857144,  58.678571428571445],
      [200.0, -1000.0, 2200.0,   8.0, 413.42857142857144,  261.39285714285717],
      [200.0, -1000.0, 4000.0,   8.0, 413.42857142857144,  316.1257142857143],
      [2000.0, -1000.0, 2200.0,  8.0, 413.42857142857144,  33.33928571428572],
      [2000.0, -1000.0, 4000.0,  8.0, 413.42857142857144,  170.17142857142858],
      [2000.0, -1000.0, 4000.0,  0.0, 441.42857142857144,  176.5714285714286],
      [2200.0, -1000.0, 2200.0,  8.0, 413.42857142857144,  8.0],
      [2600.0, -1000.0, 2200.0,  8.0, 413.42857142857144,  -42.678571428571445],
      [2800.0, -1000.0, 2200.0,  8.0, 413.42857142857144,  -68.01785714285717],
      [2800.0, -1000.0, 4000.0,  8.0, 413.42857142857144,  105.30285714285714],
      [3000.0, -1000.0, 4000.0,  8.0, 413.42857142857144,  89.08571428571429],
      [3000.0, -1000.0, 4000.0,  0.0, 441.42857142857144,  88.28571428571428],
      [3200.0, -1000.0, 2200.0,  8.0, 413.42857142857144,  -118.69642857142856],
      [3400.0, -1000.0, 2200.0,  8.0, 413.42857142857144,  -144.03571428571433],
      [3400.0, -1000.0, 4000.0,  8.0, 413.42857142857144,  56.651428571428596],
      [3600.0, -1000.0, 4000.0,  8.0, 413.42857142857144,  40.43428571428569],
      [400.0, -1000.0, 2200.0,   8.0, 413.42857142857144,  236.05357142857144],
      [400.0, -1000.0, 4000.0,   8.0, 413.42857142857144,  299.90857142857146],
      [4000.0, -1000.0, 2200.0,  8.0, 413.42857142857144,  -220.05357142857144],
      [4000.0, -1000.0, 4000.0,  8.0, 413.42857142857144,  8.0],
      [4000.0, -1000.0, 4000.0,  0.0, 441.42857142857144,  0.0],
      [600.0, -1000.0, 4000.0,   8.0, 413.42857142857144,  283.69142857142856],
      [800.0, -1000.0, 2200.0,   8.0, 413.42857142857144,  185.375],
      [0.0, 20.0, 40.0,          8.0, 413.42857142857144,  818.8571428571429],
      [20.0, 20.0, 40.0,         8.0, 413.42857142857144,  413.42857142857144],
      [20.0, 20.0, 40.0,         0.0, 441.42857142857144,  441.42857142857144],
      [25.0, 20.0, 40.0,         8.0, 413.42857142857144,  312.07142857142856],
      [30.0, 20.0, 40.0,         8.0, 413.42857142857144,  210.71428571428572],
      [30.0, 20.0, 40.0,         0.0, 441.42857142857144,  220.71428571428572],
      [35.0, 20.0, 40.0,         8.0, 413.42857142857144,  109.35714285714289],
      [50.0, 20.0, 40.0,         8.0, 413.42857142857144,  -194.71428571428567],
      [55.0, 20.0, 40.0,         8.0, 413.42857142857144,  -296.07142857142856],
      [60.0, 20.0, 40.0,         8.0, 413.42857142857144,  -397.42857142857144],
      [65.0, 20.0, 40.0,         8.0, 413.42857142857144,  -498.78571428571433],
      [70.0, 20.0, 40.0,         8.0, 413.42857142857144,  -600.1428571428572],
      [-25.0, -40.0, -20.0,      8.0, 413.42857142857144,  109.35714285714289],
      [-30.0, -40.0, -20.0,      8.0, 413.42857142857144,  210.71428571428572],
      [-30.0, -40.0, -20.0,      0.0, 441.42857142857144,  220.71428571428572],
      [-35.0, -40.0, -20.0,      8.0, 413.42857142857144,  312.07142857142856],
      [-40.0, -40.0, -20.0,      8.0, 413.42857142857144,  413.42857142857144],
      [-40.0, -40.0, -20.0,      0.0, 441.42857142857144,  441.42857142857144],
      [-50.0, -40.0, -20.0,      8.0, 413.42857142857144,  616.1428571428571],
      [-55.0, -40.0, -20.0,      8.0, 413.42857142857144,  717.5],
      [-60.0, -40.0, -20.0,      8.0, 413.42857142857144,  818.8571428571429],
      [-65.0, -40.0, -20.0,      8.0, 413.42857142857144,  920.2142857142858],
      [-70.0, -40.0, -20.0,      8.0, 413.42857142857144,  1021.5714285714286],
      [0.0, -40.0, -20.0,        8.0, 413.42857142857144,  -397.428571428571434],
    ];
    for (var valuesRow in data) {
      expect(
        isCloserThanEpsilon(
            AffineRangedMap1D(
              fromRangeStart: valuesRow[1],
              fromRangeEnd: valuesRow[2],
              toRangeStart: valuesRow[4],
              toRangeEnd: valuesRow[3],
            ).apply(valuesRow[0]),
            valuesRow[5]
        ),
        true,
      );
    }
  });

  test('ToPixelsAffineMap1D.apply', () {

    expect(ToPixelsAffineMap1D(
      fromValuesRange: const Interval(1.0, 2.0),
      toPixelsRange: const Interval(10.0, 20.0),
    ).apply(1.0),
      10.0,);
  });

}
